{"version":3,"file":"autofocus-fix.directive.d.ts","sources":["/home/pierre/todo-angular/node_modules/ngx-autofocus-fix/lib/autofocus-fix.directive.d.ts"],"sourcesContent":["import { AfterContentInit, ChangeDetectorRef, ElementRef, OnChanges, OnInit, SimpleChange } from '@angular/core';\nimport { MutablePartial } from './utils';\nimport { AutofocusFixConfig } from './autofocus-fix-config';\n/**\n * ## Ways to turn off autofocus: any js-falsely value, except empty string\n *\n *     <!-- with data binding -->\n *     <input [autofocus]=\"\"> <!-- undefined value -->\n *     <input [autofocus]=\"undefined\">\n *     <input [autofocus]=\"false\">\n *     <input [autofocus]=\"null\">\n *     <input [autofocus]=\"0\">\n *     <input [autofocus]=\"NaN\">\n *\n *     <!-- without data binding -->\n *     <input autofocus=\"undefined\">\n *     <input autofocus=\"false\">\n *     <input autofocus=\"null\">\n *     <input autofocus=\"0\">\n *     <input autofocus=\"NaN\">\n *\n *     <input> <!-- disabled by default -->\n *\n *\n * ## Ways to enable autofocus: any js-true value and empty string\n *\n *     <!-- empty string will enable autofocus, this is default html behavior -->\n *     <input [autofocus]=\"''\">\n *     <input autofocus=\"\">\n *     <input autofocus>\n *\n *     <input [autofocus]=\"true\">\n *     <input autofocus=\"true\">\n *\n *     <input [autofocus]=\"'any other values'\">\n *\n * @dynamic\n * Notice: @dynamic used for correctly Document inject\n *         https://github.com/angular/angular/issues/20351\n */\nexport declare class AutofocusFixDirective implements OnChanges, OnInit, AfterContentInit {\n    private readonly $cdr;\n    private readonly $document;\n    private readonly $config;\n    /** Raw value. Always have default value: '' */\n    autofocus: any;\n    /** @see {@link AutofocusFixConfig.smartEmptyCheck} */\n    autofocusFixSmartEmptyCheck?: boolean | any;\n    /** @see {@link AutofocusFixConfig.triggerDetectChanges} */\n    autofocusFixTriggerDetectChanges?: boolean | any;\n    /** @see {@link AutofocusFixConfig.async} */\n    autofocusFixAsync?: boolean | any;\n    private wasInitialized;\n    /** Notice: protected for unit testing */\n    protected localConfig: MutablePartial<AutofocusFixConfig>;\n    private config;\n    private autofocusEnabled;\n    private readonly element;\n    constructor($er: ElementRef, $cdr: ChangeDetectorRef, $document: Document, $config: AutofocusFixConfig);\n    ngOnChanges(changes: {\n        [key in keyof AutofocusFixDirective]?: SimpleChange;\n    }): void;\n    ngOnInit(): void;\n    ngAfterContentInit(): void;\n    private checkFocus;\n    private checkFocusInternal;\n    private readonly amIFocused;\n    private normalizeLocalConfigItem;\n}\n"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;"}