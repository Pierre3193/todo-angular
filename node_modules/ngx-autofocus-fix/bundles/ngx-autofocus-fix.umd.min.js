!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define("ngx-autofocus-fix",["exports","@angular/core","@angular/common"],t):t((e=e||self)["ngx-autofocus-fix"]={},e.ng.core,e.ng.common)}(this,function(e,t,o){"use strict";var n=function(){function e(t){var o=this;this.async=!1,this.smartEmptyCheck=!1,this.triggerDetectChanges=!1,e.keys.filter(function(e){return void 0!==t[e]}).forEach(function(e){return o[e]=t[e]})}return e.keys=["async","smartEmptyCheck","triggerDetectChanges"],e}();function i(e,t){return void 0===t&&(t=!1),!(!1===e||null==e||0===e||"false"===e||"null"===e||"undefined"===e||"0"===e||"number"==typeof e&&isNaN(e)||"NaN"===e||t&&(""===e||e instanceof Array&&!e.length||null!==e&&"object"==typeof e&&!Object.keys(e).length))}var c=function(){function e(e,t,o,n){this.$cdr=t,this.$document=o,this.$config=n,this.wasInitialized=!1,this.localConfig={},this.autofocusEnabled=!1,this.element=e.nativeElement}return e.prototype.ngOnChanges=function(e){this.wasInitialized||(this.normalizeLocalConfigItem("async",e.autofocusFixAsync),this.normalizeLocalConfigItem("smartEmptyCheck",e.autofocusFixSmartEmptyCheck),this.normalizeLocalConfigItem("triggerDetectChanges",e.autofocusFixTriggerDetectChanges))},e.prototype.ngOnInit=function(){var e=this;if(!this.element.focus)return console.warn("AutofocusFixDirective: There is no .focus() method on the element: %O",this.element);this.config={},n.keys.forEach(function(t){var o=e.localConfig[t];e.config[t]=void 0!==o?o:e.$config[t]}),this.autofocusEnabled=i(this.autofocus,this.config.smartEmptyCheck)},e.prototype.ngAfterContentInit=function(){this.wasInitialized=!0,this.element.focus&&this.checkFocus()},e.prototype.checkFocus=function(){this.config.async?setTimeout(this.checkFocusInternal.bind(this)):this.checkFocusInternal()},e.prototype.checkFocusInternal=function(){this.autofocusEnabled&&!this.amIFocused&&(this.element.focus(),this.config.triggerDetectChanges&&this.$cdr.detectChanges())},Object.defineProperty(e.prototype,"amIFocused",{get:function(){return this.$document.activeElement===this.element},enumerable:!0,configurable:!0}),e.prototype.normalizeLocalConfigItem=function(e,t){t&&(this.localConfig[e]=i(t.currentValue))},e.decorators=[{type:t.Directive,args:[{selector:"[autofocus]"}]}],e.ctorParameters=function(){return[{type:t.ElementRef},{type:t.ChangeDetectorRef},{type:Document,decorators:[{type:t.Inject,args:[o.DOCUMENT]}]},{type:n}]},e.propDecorators={autofocus:[{type:t.Input}],autofocusFixSmartEmptyCheck:[{type:t.Input}],autofocusFixTriggerDetectChanges:[{type:t.Input}],autofocusFixAsync:[{type:t.Input}]},e}();function r(e){return new n(e)}var u=new t.InjectionToken("AutofocusFixOptions"),s=function(){function e(e){e||function(){var e="AutofocusFixConfig";throw new Error("AutofocusFixModule: Can't inject "+e+".\n\n    Option 1: Use .forRoot() when you importing the module:\n              Do it in case you import AutofocusFixModule to the root module of your application.\n\n    @NgModule({\n      ...\n      imports: [\n        ...\n        AutofocusFixModule.forRoot(),     // <--- new code\n      ],\n      ...\n    })\n    export class AppModule {}\n\n\n    Option 2: Provide "+e+" manually providing "+e+":\n              Do it in case you want to provide specific config to the one of your lazy loadable modules.\n\n    @NgModule({\n      ...\n      providers: [\n        ...\n        {                                               // <--- new code\n          provide: "+e+"                   // <---\n          useValue: new "+e+"({ ... }),    // <---\n        },                                              // <---\n      ],\n      ...\n    })\n    export class AppModule {}\n  ")}()}return e.forRoot=function(t){return void 0===t&&(t={}),{ngModule:e,providers:[{provide:u,useValue:t},{provide:n,useFactory:r,deps:[u]}]}},e.decorators=[{type:t.NgModule,args:[{declarations:[c],exports:[c]}]}],e.ctorParameters=function(){return[{type:n,decorators:[{type:t.Optional}]}]},e}();e.AutofocusFixConfig=n,e.AutofocusFixModule=s,e.ɵa=r,e.ɵb=c,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=ngx-autofocus-fix.umd.min.js.map